name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, develop]
  pull_request_review_request:
    types: [requested]

permissions:
  contents: read
  pull-requests: write
  issues: write
  actions: read

jobs:
  claude-code-review:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get changed files
        id: changed-files
        run: |
          # Get list of changed files in this PR
          git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} > changed_files.txt
          echo "Changed files:"
          cat changed_files.txt
          
          # Create summary for Claude
          echo "FILES_CHANGED=$(wc -l < changed_files.txt)" >> $GITHUB_OUTPUT
          echo "DIFF_SIZE=$(git diff --stat ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} | tail -1)" >> $GITHUB_OUTPUT

      - name: Create review context
        id: review-context
        run: |
          # Create context file for Claude Code review
          cat > review_context.md << 'EOF'
          # Claude Code Review Context
          
          ## Pull Request Information
          - **Title:** ${{ github.event.pull_request.title }}
          - **Author:** ${{ github.event.pull_request.user.login }}
          - **Branch:** ${{ github.event.pull_request.head.ref }} → ${{ github.event.pull_request.base.ref }}
          - **Files Changed:** ${{ steps.changed-files.outputs.FILES_CHANGED }}
          - **Diff Summary:** ${{ steps.changed-files.outputs.DIFF_SIZE }}
          
          ## Review Focus Areas
          - Code quality and SOLID principles
          - FLOW methodology adherence
          - Educational framework integration
          - Security and best practices
          - Documentation completeness
          - Test coverage
          
          ## Project Context
          This is the VITA project using FLOW (Fun Learning Optimizes Wisdom) methodology.
          Follow SAFE (Structure Always Frees Excellence) principles in review.
          Apply VIBE (Verify, and Inspirational Behaviors Emerge) when giving feedback.
          
          ## Changed Files
          EOF
          cat changed_files.txt >> review_context.md

      - name: Run Claude Code Review
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Install Claude Code CLI
          curl -fsSL https://claude.ai/install.sh | bash
          export PATH="$HOME/.local/bin:$PATH"
          
          # Configure Claude Code for review
          echo "Configuring Claude Code for PR review..."
          
          # Run Claude Code review with context
          claude-code review \
            --pr-number=${{ github.event.pull_request.number }} \
            --context-file=review_context.md \
            --focus="code-quality,security,educational-value" \
            --output-format=github-comment \
            --max-suggestions=10 \
            > claude_review.md

      - name: Post Claude Review Comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read Claude's review
            let reviewContent = '';
            try {
              reviewContent = fs.readFileSync('claude_review.md', 'utf8');
            } catch (error) {
              reviewContent = `## 🤖 Claude Code Review
              
              ⚠️ Review generation failed: ${error.message}
              
              Please request manual review.`;
            }
            
            // Add VIBE fortune and metadata
            const timestamp = new Date().toISOString();
            const fullComment = `${reviewContent}
            
            ---
            
            🔮 **VIBE:** "Verify, and Inspirational Behaviors Emerge"
            
            *Review generated by Claude Code at ${timestamp}*
            *Following FLOW methodology and SAFE principles*
            
            🎯 **Next Steps:**
            1. Address any security or critical issues first
            2. Consider educational value enhancements
            3. Verify tests cover new functionality
            4. Update documentation as needed
            
            **teacherbot.help has a posse** 🚀`;
            
            // Post the review comment
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: fullComment
            });

      - name: Check for security issues
        run: |
          # Basic security scan
          echo "🔍 Running security checks..."
          
          # Check for exposed secrets
          if grep -r "sk-ant-api" . --exclude-dir=.git; then
            echo "⚠️ Potential API key exposure detected"
            exit 1
          fi
          
          # Check for other sensitive patterns
          if grep -r "password\|secret\|token" . --exclude-dir=.git --exclude-dir=node_modules | grep -v ".md:"; then
            echo "⚠️ Potential sensitive information detected"
            exit 1
          fi
          
          echo "✅ Basic security checks passed"

      - name: FLOW Methodology Check
        run: |
          # Check if PR follows FLOW methodology
          echo "🌊 Checking FLOW methodology adherence..."
          
          # Check for proper documentation
          if [[ "${{ github.event.pull_request.body }}" == *"## Summary"* ]]; then
            echo "✅ PR includes summary"
          else
            echo "⚠️ PR should include summary section"
          fi
          
          # Check for test files
          if ls *test* >/dev/null 2>&1 || ls */test* >/dev/null 2>&1; then
            echo "✅ Tests included or existing"
          else
            echo "ℹ️ Consider adding tests for new functionality"
          fi
          
          echo "🎯 FLOW methodology check complete"

      - name: Update PR with review status
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            // Add review status label
            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['claude-reviewed']
            });
            
            // If this is first review, add welcome comment
            const comments = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const hasClaudeComment = comments.data.some(comment => 
              comment.body.includes('Claude Code Review'));
            
            if (!hasClaudeComment) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## 👋 Welcome to Claude Code Review!
                
                This PR has been automatically reviewed by Claude Code following our FLOW methodology.
                
                **Review Standards:**
                - 🔒 Security and best practices
                - 🎯 Code quality and SOLID principles  
                - 📚 Educational framework integration
                - 🧪 Test coverage and documentation
                - 🌊 FLOW methodology adherence
                
                Look for the detailed review comment above! 🚀`
              });
            }